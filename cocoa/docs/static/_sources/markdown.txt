.. _markdown:

Markdown语法说明
================

为什么使用Markdown格式？
------------------------

Markdown的目标是实现“易读易写”。

可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以 直接以 纯文本发布，并且看起来不会像是由许多标签 或是格式指令所构成。 Markdown 的语法全由 一些符号所组成，这些符号经过精挑细选，其 作用一目 了然。比如：在文字两旁加上星号， 看起来就像*强调*。Markdown 的列表看起来， 嗯，就是列表。Markdown 的区块引用看起来 就真的像是引用一段文字，就像你曾
在电子 邮件中见过的那样。

下面就让我们见识一下Markdown的强大威力吧。


段落和换行
----------

一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的 空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行 只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来 缩进。

如果你确实想要依赖 Markdown 来插入 <br /> 标签的话，在插入处先按入两个以 上的空格然后回车。


标题
----

Markdown 支持两种标题的语法，类 [Setext] [1] 和类 [atx] [2] 形式。

类 Setext 形式是用底线的形式，利用 “=“ （最高阶标题）和 “-“ （第二 阶标题），例如::

     这是一级标题（H1）
     =================

     这是二级标题（H2）
     -----------------

任何数量的 = 和 - 都可以有效果。

类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如::

    # 这是一级标题（H1）

    ## 这是二级标题（H2）

    ###### 这是六级标题（H6）

你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得 这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头 一样（行首的井字符数量决定标题的阶数）::

    # 这是一级标题（H1） #

    ## 这是二级标题（H2） ##

    ###### 这是六级标题（H6） ######


区块引用 Blockquotes
--------------------

Markdown 标记区块引用是使用类似 email 中用 > 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用， 那会看起来像是你自己先断好行，然后在每行的最前面加上 > ::

    > 莫听穿林打叶声，
    > 何妨吟啸且徐行。
    > 竹杖芒谢轻胜马，
    > 谁怕？
    > 一蓑烟雨任平生。

Markdown 也允许你偷懒只在整个段落的第一行最前面加上 > ::

    > 莫听穿林打叶声，
    何妨吟啸且徐行。
    竹杖芒鞋轻胜马，

    > 谁怕？
    一蓑烟雨任平生。

区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ::

    > 莫听穿林打叶声，
    >
    > > 何妨吟啸且徐行。
    >
    > > > 竹杖芒鞋轻胜马，

    > 谁怕？
    一蓑烟雨任平生。

引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等::

    > ## 定风波
    >
    > 1.    莫听穿林打叶声，
    > 2.    何妨吟啸且徐行。


列表
----

Markdown 支持有序列表和无序列表。

无序列表使用星号、加号或是减号作为列表标记::

    *   Red
    *   Green
    *   Blue

等同于::

    +   Red
    +   Green
    +   Blue

也等同于::

    -   Red
    -   Green
    -   Blue

有序列表则使用数字接着一个英文句点::

    1.  Sunday
    2.  Monday
    3.  Tuesday


代码块
------

和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <pre> 和 <code> 标签来把代码区块包起来。

要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入::

    这是一个普通段落，下面是一个代码块：

        int main() {
            printf("hello world\n");
            return 0;
        }


分隔线
------

你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线::

    * * *
    
    ***

    *****

    - - -

    -------------------------------


链接
----

Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。

不管是哪一种，链接文字都是用 [方括号] 来标记。

要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如::

    使用[谷歌](http://www.google.com/ "Google")搜索感兴趣的内容。

下面是一个参考式链接的范例::

    我使用 [Google] [1] ，[Yahoo] [2] 或 [MSN] [3] 进行网络搜索。

    [1]: http://www.google.com/     "Google"
    [2]: http://search.yahoo.com/   "Yahoo Search"
    [3]: http://search.msn.com/     "MSN Search"


强调
----

Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 <em> 标签包围，用两个 * 或 _ 包起来的话，则会被转成 <strong>，例如::

    *single asterisks*

    _single underscores_

    **double asterisks**

    __double underscores__


代码
----

如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如::

    Use the `printf` function.

如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段::

    ``There is a literal backtick (`) here.``


图片
----

很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。

Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。

行内式的图片语法看起来像是::

    ![Alt text](/path/to/img.jpg)

    ![Alt text](/path/to/img.jpg "Optional title")

参考式的图片语法则长得像这样::

    ![Alt text][id]

    [id]: url/to/image "Optional title attribute"

到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <img> 标签。
